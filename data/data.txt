([], [{'title': 'Data-Driven Risk Modeling for Infrastructure Projects Using Artificial Intelligence Techniques', 'authors': ['Abdolmajid Erfani'], 'year': 2023, 'journal': 'arXiv preprint', 'doi': None, 'url': 'http://arxiv.org/pdf/2311.14203v1', 'abstract': 'Managing project risk is a key part of the successful implementation of any\nlarge project and is widely recognized as a best practice for public agencies\nto deliver infrastructures. The conventional method of identifying and\nevaluating project risks involves getting input from subject matter experts at\nrisk workshops in the early phases of a project. As a project moves through its\nlife cycle, these identified risks and their assessments evolve. Some risks are\nrealized to become issues, some are mitigated, and some are retired as no\nlonger important. Despite the value provided by conventional expert-based\napproaches, several challenges remain due to the time-consuming and expensive\nprocesses involved. Moreover, limited is known about how risks evolve from\nex-ante to ex-post over time. How well does the project team identify and\nevaluate risks in the initial phase compared to what happens during project\nexecution? Using historical data and artificial intelligence techniques, this\nstudy addressed these limitations by introducing a data-driven framework to\nidentify risks automatically and to examine the quality of early risk registers\nand risk assessments. Risk registers from more than 70 U.S. major\ntransportation projects form the input dataset.'}, {'title': 'A Qualitative Modal Representation of Quantum Register Transformations', 'authors': ['Andrea Masini', 'Luca Vigan√≤', 'Margherita Zorzi'], 'year': 2008, 'journal': 'arXiv preprint', 'doi': None, 'url': 'http://arxiv.org/pdf/0802.4057v2', 'abstract': 'We introduce two modal natural deduction systems that are suitable to\nrepresent and reason about transformations of quantum registers in an abstract,\nqualitative, way. Quantum registers represent quantum systems, and can be\nviewed as the structure of quantum data for quantum operations. Our systems\nprovide a modal framework for reasoning about operations on quantum registers\n(unitary transformations and measurements), in terms of possible worlds (as\nabstractions of quantum registers) and accessibility relations between these\nworlds. We give a Kripke--style semantics that formally describes quantum\nregister transformations and prove the soundness and completeness of our\nsystems with respect to this semantics.'}, {'title': 'Register Spilling for Specific Application Domains in Application Specific Instruction-set Processors', 'authors': ['M. G. G. C. R. Salgado', 'R. G. Ragel'], 'year': 2014, 'journal': 'arXiv preprint', 'doi': None, 'url': 'http://arxiv.org/pdf/1412.7664v1', 'abstract': 'An Application Specific Instruction set Processor (ASIP) is an important\ncomponent in designing embedded systems. One of the problems in designing an\ninstruction set for such processors is determining the number of registers is\nneeded in the processor that will optimize the computational time and the cost.\nThe performance of a processor may fall short due to register spilling, which\nis caused by the lack of available registers in a processor. In the design\nperspective, it will result in processors with great performance and low power\nconsumption if we can avoid register spilling by deciding a value for the\nnumber of registers needed in an ASIP. However, as of now, it has not clearly\nbeen recognized how the number of registers changes with different application\ndomains. In this paper, we evaluated whether different application domains have\nany significant effect on register spilling and therefore the performance of a\nprocessor so that we could use different number of registers when building\nASIPs for different application domains rather than using a constant set of\nregisters. Such utilization of registers will result in processors with high\nperformance, low cost and low power consumption.'}, {'title': 'Evaluation of High-Speed Universal Shift Register with 4-bit ALU', 'authors': ['Md Shahriar Kabir', 'Khalid Mahmud Niloy', 'Sumaiya Afrose'], 'year': 2025, 'journal': 'arXiv preprint', 'doi': None, 'url': 'http://arxiv.org/pdf/2501.06479v1', 'abstract': 'This paper contains information about the universal shift register. In the\nearly stages of this paper, this paper introduces different types of flip flops\nand calculates the delay. After that, different types of flip flops are used to\nmake a universal shift register, and the high-speed universal shift register is\nmeasured using a timing diagram. In addition, a complete memory system was\ndesigned at the end of this paper. A universal shift register with 4-bit Alu\nwas added to complete the memory system. As a result, this method has created\nan accurate memory storage device with high-speed characteristics.'}, {'title': 'Bounded Synthesis of Register Transducers', 'authors': ['Ayrat Khalimov', 'Benedikt Maderbacher', 'Roderick Bloem'], 'year': 2018, 'journal': 'arXiv preprint', 'doi': None, 'url': 'http://arxiv.org/pdf/1809.05017v1', 'abstract': 'Reactive synthesis aims at automatic construction of systems from their\nbehavioural specifications. The research mostly focuses on synthesis of systems\ndealing with Boolean signals. But real-life systems are often described using\nbit-vectors, integers, etc. Bit-blasting would make such systems unreadable,\nhit synthesis scalability, and is not possible for infinite data-domains. One\nstep closer to real-life systems are register transducers: they can store\ndata-input into registers and later output the content of a register, but they\ndo not directly depend on the data-input, only on its comparison with the\nregisters. Previously it was proven that synthesis of register transducers from\nregister automata is undecidable, but there the authors considered transducers\nequipped with the unbounded queue of registers. First, we prove the problem\nbecomes decidable if bound the number of registers in transducers, by reducing\nthe problem to standard synthesis of Boolean systems. Second, we show how to\nuse quantified temporal logic, instead of automata, for specifications.'}], [])